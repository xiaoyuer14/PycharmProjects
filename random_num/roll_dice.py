"""	可视化骰子的抛甩结果	NumPy科学计算库 Numeric Python	ndarray.shape数组的维度	np.random.randint(a, b, size), 生成[a,b)间形状为size的数组	np相加为向量化相加"""import randomimport matplotlib.pyplot as pltimport numpy as np# 中文显示plt.rcParams['font.sans-serif'] = ['SimHei']plt.rcParams['axes.unicode_minus'] = Falsedef roll_dice():	roll = random.randint(1, 6)	return rolldef main():	total_times = 2000	# 初始化列表	result_list = [0] * 11	# 点数列表初始化	roll_list = list(range(2, 13))	roll_dict = dict(zip(roll_list, result_list))	# 记录骰子1的结果	roll1_list = []	# 记录骰子2的结果	roll2_list = []	roll_list = []	new_roll1_arr = np.random.randint(1, 7, size=total_times)	new_roll2_arr = np.random.randint(1, 7, size=total_times)	new_result_arr = new_roll1_arr + new_roll2_arr	hist, bins = np.histogram(new_result_arr, bins=range(2, 14))	print(hist)	print(bins)	for i in range(total_times):		roll_1 = roll_dice()		roll_2 = roll_dice()		# index = roll_1 + roll_2		# result_list[index-1] += 1		roll1_list.append(roll_1)		roll2_list.append(roll_2)		roll_list.append(roll_1 + roll_2)		for j in range(2, 13):			if (roll_1 + roll_2) == j:				roll_dict[j] += 1	# for k, v in enumerate(result_list):	# 	print(k, "---", v)	for i, result in roll_dict.items():		print("点数 {} 的次数：{} ，频率：{}".format(i, result, result/total_times))	# 数据可视化输出	# x = range(1, total_times + 1)	# y = plt.scatter(x, roll1_list, c='red', alpha=0.5)	# y = plt.scatter(x, roll2_list, c='green', alpha=0.5)	# plt.show()	# 直方图数据结果	# normed归一化，3.1改为density	# bins分组边界	# plt.hist(roll_list, bins=range(2, 14), density=1, edgecolor='black', linewidth=1)	plt.hist(new_result_arr, bins=range(2, 14), density=1, edgecolor='black', linewidth=1, rwidth=0.75)	# 设置x轴坐标点文字	tick_labels = [ '2点' , '3点' , '4点' , '5点' , '6点' , '7点' , '8点' , '9点' , '10点' , '11点' , '12点' ]	tick_pos = np.arange( 2 , 13 ) + 0.5	plt.xticks(tick_pos, tick_labels)	plt.title('骰子点数统计')	plt.xlabel('点数')	plt.ylabel('频率')	plt.show()if __name__ == '__main__':	main()